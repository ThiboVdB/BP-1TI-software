# site.yml
---
- hosts: all
  become: true
  vars:
    - ansible_python_interpreter: "{{ '/usr/bin/env python3'}}"
  tasks:
    - set_fact:
        ansible_python_interpreter: "{{ ansible_playbook_python }}"
        delegate_to: localhost
        delegate_facts: true
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
        mode: '0666'

    - name: Install Docker Engine and Python pip
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - python-pip

    - name: Install Docker Modules for Python
      pip:
        name: 
          - docker
        executable: pip
        
    - name: Add vagrant user to Docker groups
      user:
        name: vagrant
        groups: docker

    - name: Download Docker Compose
      shell:
        cmd: curl -L "https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      args: 
        warn: false

    - name: Set permissions for Docker Compose
      file:
        path: /usr/local/bin/docker-compose
        mode: '0777'

    - name: Restart docker service
      service:
        name: docker
        state: restarted

    - name: Create portainer monitoring container
      docker_container:
        name: monitoring
        image: portainer/portainer
        state: started
        restart: true
        ports:
          - "8000:8000"
          - "9000:9000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data portainer/portainer
  handlers:
    - name: docker status
      service: 
        name: docker 
        state: started
